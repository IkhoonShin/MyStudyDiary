# Reflection이란?
  -구체적인 클래스 타입을 알지 못해도 그 클래스의 메소드, 타입, 변수들에 접근할 수 있도록 해주는 자바 API
  -클래스로더를 통해 읽어 온 클래스 정보를 사용하는 기술
  -리플렉션을 사용해 클래스를 읽어오거나 인스턴스를 만들거나, 메소드를 실행하거나, 필드의 값을 가져오거나 변경하는 것이 가능하다.


  -런타임에 지금 실행되고 있는 클래스를 가져와서 실행해야 하는 경우
  -동적으로 객체를 생성하고 메서드를 호출하는 방법
  -자바의 리플렉션은 클래스, 인터페이스, 메소드들을 찾을 수 있고, 객체를 생성하거나 변수를 변경하거나 메소드를 호출할 수 있음

## 어떤 경우에 사용?
  -코드를 작성할 시점에는 어떤 타입의 클래스를 사용할 지 모르지만, 런타임 시점에 지금 실행되고 있는 클래스를 가져와서 실행해야 하는 경우
  프레임워크나 IDE에서 이런 동적인 바인딩을 이용한 기능을 제공한다. intelliJ의 자동완성 기능, 스프링의 어노테이션이 리플렉션을 이용한 기능이다.
  
  -특정 어노테이션이 붙어있는 필드 또는 메소드를 읽어오기 (JUnit, Spring)
  -특정 이름 패턴에 해당하는 메소드 목록 가져와 호출하기 (getter, setter)
  
## 어떻게 사용?
  Class<?> aClass = Class.forNmae("me.whiteship.hello.ChineseHelloService");
  aClass.getConstruntor = aClass.getConstructor();
  HelloService helloservice = constructor.newInstance();
  
## Need
  -JDK 1.8
  -STS툴
  --Postman
  -톰켓 9.0

